// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Security;
using Evergine.Mathematics;

namespace BulletSharp
{
    [SuppressUnmanagedCodeSecurity]
    internal static class EvergineUnsafeNativeMethods
    {
        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern IntPtr btCollisionWorld_CreateBuffer();

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern void btCollisionWorld_DeleteBuffer(IntPtr buffer);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern int btCollisionWorld_ContactTest(IntPtr collisionWorld, IntPtr collisionObject, int shapeIndex, IntPtr buffer, ref IntPtr bufferData);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern int btCollisionWorld_ContactPairTest(IntPtr collisionWorld, IntPtr collisionObjectA, IntPtr collisionObjectB, int shapeIndexA, int shapeIndexB, IntPtr buffer, ref IntPtr bufferData);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern IntPtr btCollisionWorld_CreateManifoldBuffer();

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern void btCollisionWorld_DeleteManifoldBuffer(IntPtr buffer);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern int btCollisionWorld_GetManifolds(IntPtr collisionWorld, IntPtr buffer, ref IntPtr bufferData);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern void btCollisionWorld_GetManifoldContact(IntPtr collisionWorld, int manifoldId, int contactId, IntPtr contact);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern int btCollisionWorld_GetManifoldContacts(IntPtr collisionWorld, int manifoldId, IntPtr contactBuffer, int contactBufferSize);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern IntPtr btCollisionWorld_CreateRayDataBuffer();

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern void btCollisionWorld_DeleteRayDataBuffer(IntPtr buffer);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern int btCollisionWorld_RayTest(IntPtr world, [In] ref Vector3 rayFromWorld, [In] ref Vector3 rayToWorld, int filterMask, IntPtr buffer, ref IntPtr bufferData);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern int btCollisionWorld_RayTestAll(IntPtr world, [In] ref Vector3 rayFromWorld, [In] ref Vector3 rayToWorld, int filterMask, IntPtr buffer, ref IntPtr bufferData);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern int btCollisionWorld_SweepTest(IntPtr world, IntPtr castShape, IntPtr castOwner, [In] ref Matrix4x4 rayFromWorld, [In] ref Matrix4x4 rayToWorld, int filterMask, IntPtr buffer, ref IntPtr bufferData);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern int btCollisionWorld_SweepTestAll(IntPtr world, IntPtr castShape, IntPtr castOwner, [In] ref Matrix4x4 rayFromWorld, [In] ref Matrix4x4 rayToWorld, int filterMask, IntPtr buffer, ref IntPtr bufferData);



        ////[DllImport(Native.Dll, CallingConvention = Native.Conv)]
        ////public static extern void btIDebugDraw_setDefaultColors(IntPtr obj, IntPtr defaultColors);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern IntPtr btConvexHullShape_new4(IntPtr pointsPtr, int numPoints, int stride);

        // Evergine Debug Draw
        
        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern IntPtr btEvergineDebugDrawWrapper_new(IntPtr debugDrawGCHandle);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern IntPtr btEvergineDebugDrawWrapper_getGCHandle(IntPtr obj);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern void btEvergineDebugDrawWrapper_reset(IntPtr obj);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern void btEvergineDebugDrawWrapper_getDrawInformation(IntPtr obj, out int commandCount, out IntPtr buffer);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]

        public static extern int btEvergineDebugDrawWrapper_getDebugMode(IntPtr obj);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]

        public static extern void btEvergineDebugDrawWrapper_setDebugMode(IntPtr obj, int debugMode);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern void btEvergineDebugDrawWrapper_setDefaultColors(IntPtr obj, IntPtr defaultColors);


        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern void btEvergineDebugDrawWrapper_delete(IntPtr obj);

        // Methods included because due to WASM cookies issues

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern int btDynamicsWorld_stepSimulation_fixCookie(IntPtr obj, float timeStep, int maxSubSteps, float fixedTimeStep, int i1, int i2, int i3, int i4, int i5);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern IntPtr btRigidBody_btRigidBodyConstructionInfo_new_fixCookie(float mass, IntPtr motionState, IntPtr collisionShape, [In] ref Matrix4x4 transform);

        [DllImport(Native.Dll, CallingConvention = Native.Conv)]
        public static extern void btCollisionWorld_convexSweepTest_fixCookie(IntPtr obj, IntPtr castShape, [In] ref Matrix4x4 from, float allowedCcdPenetration, [In] ref Matrix4x4 to, IntPtr resultCallback);

    }
}
